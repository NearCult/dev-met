# .github/workflows/auto-merge.yml
name: Auto-merge
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to merge'
        required: true
        type: string
      target_branch:
        description: 'Target branch (main/dev)'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - dev

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    outputs:
      can_merge: ${{ steps.check.outputs.can_merge }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Check PR status
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_DATA=$(gh pr view ${{ github.event.inputs.pr_number }} --json state,mergeable,reviewDecision,statusCheckRollup)
          
          STATE=$(echo $PR_DATA | jq -r '.state')
          MERGEABLE=$(echo $PR_DATA | jq -r '.mergeable')
          REVIEW_DECISION=$(echo $PR_DATA | jq -r '.reviewDecision')
          
          echo "PR State: $STATE"
          echo "Mergeable: $MERGEABLE"
          echo "Review Decision: $REVIEW_DECISION"
          
          # Check if PR is in valid state for merging
          if [[ "$STATE" == "OPEN" && "$MERGEABLE" == "MERGEABLE" && "$REVIEW_DECISION" == "APPROVED" ]]; then
            # Check if all status checks passed
            CHECKS_PASSED=$(echo $PR_DATA | jq -r '.statusCheckRollup[] | select(.name == "pr-checks-complete") | .conclusion')
            
            if [[ "$CHECKS_PASSED" == "SUCCESS" ]]; then
              echo "can_merge=true" >> $GITHUB_OUTPUT
              echo "✅ PR is ready for auto-merge"
            else
              echo "can_merge=false" >> $GITHUB_OUTPUT
              echo "❌ PR checks have not passed"
              exit 1
            fi
          else
            echo "can_merge=false" >> $GITHUB_OUTPUT
            echo "❌ PR is not in valid state for merging"
            exit 1
          fi

  auto-merge:
    needs: validate-pr
    runs-on: ubuntu-latest
    if: needs.validate-pr.outputs.can_merge == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Merge PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🚀 Auto-merging PR #${{ github.event.inputs.pr_number }} to ${{ github.event.inputs.target_branch }}"
          
          # Merge the PR using squash merge
          gh pr merge ${{ github.event.inputs.pr_number }} \
            --squash \
            --delete-branch \
            --admin
          
          echo "✅ PR successfully merged and branch deleted"
      
      - name: Post merge notification
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.inputs.pr_number }} --body "🎉 **Auto-merge completed successfully!**
          
          - ✅ PR merged to \`${{ github.event.inputs.target_branch }}\`
          - 🗑️ Feature branch deleted
          - 🤖 Merged via auto-merge workflow"
