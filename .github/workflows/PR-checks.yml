name: PR Checks

on:
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      devmet-app: ${{ steps.filter.outputs.devmet-app }}
      devmet-ui: ${{ steps.filter.outputs.devmet-ui }}
      devmet-backend: ${{ steps.filter.outputs.devmet-backend }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            devmet-app:
              - 'apps/devmet-app/**'
              - 'pnpm-workspace.yaml'
              - 'package.json'
            devmet-ui:
              - 'package/devmet-ui/**'
              - 'pnpm-workspace.yaml'
              - 'package.json'
            devmet-backend:
              - 'apps/devmet-backend/**'
              - 'pnpm-workspace.yaml'
              - 'package.json'

  devmet-app:
    needs: changes
    if: needs.changes.outputs.devmet-app == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.6

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        working-directory: ./apps/devmet-app
        run: pnpm lint

      - name: typecheck
        working-directory: ./apps/devmet-app
        run: pnpm typecheck

      - name: Build
        working-directory: ./apps/devmet-app
        run: pnpm build

  devmet-ui:
    needs: changes
    if: needs.changes.outputs.devmet-ui == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.6

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        working-directory: ./package/devmet-ui
        run: pnpm lint

      - name: Build
        working-directory: ./package/devmet-ui
        run: pnpm build

  devmet-backend:
    needs: changes
    if: needs.changes.outputs.devmet-backend == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.6

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        working-directory: ./apps/devmet-backend
        run: pnpm lint

      - name: Build
        working-directory: ./apps/devmet-backend
        run: pnpm build

      # - name: Run tests
      #   run: pnpm --filter "./apps/devmet-backend" test

  pr-checks-complete:
    runs-on: ubuntu-latest
    needs: [changes, devmet-app, devmet-ui, devmet-backend]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "Changes: ${{ needs.changes.result }}"
          echo "devmet-app: ${{ needs.devmet-app.result }}"
          echo "devmet-ui: ${{ needs.devmet-ui.result }}"
          echo "devmet-backend: ${{ needs.devmet-backend.result }}"
          
          if [[ "${{ needs.changes.result }}" == "failure" ]]; then
            echo "Changes job failed"
            exit 1
          fi
          
          if [[ "${{ needs.devmet-app.result }}" == "failure" ]]; then
            echo "devmet-app job failed"
            exit 1
          fi
          
          if [[ "${{ needs.devmet-ui.result }}" == "failure" ]]; then
            echo "devmet-ui job failed"
            exit 1
          fi
          
          if [[ "${{ needs.devmet-backend.result }}" == "failure" ]]; then
            echo "devmet-backend job failed"
            exit 1
          fi
          
          echo "All jobs completed successfully!"